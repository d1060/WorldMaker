#pragma kernel CSMain

RWStructuredBuffer<float> heightMap;
StructuredBuffer<float> flowErosionMap;
RWTexture2D<float4> result;

int _MapWidth;
float _MinimumHeight;
float _MaximumHeight;

float _Seed;
int _Octaves;
float _Lacunarity;
float _Persistence;
float _Multiplier;
float _xOffset;
float _yOffset;
float _zOffset;
int _RidgedNoise;
float _DomainWarping;
float _HeightExponent;
float _LayerStrength;

float _xOffset2;
float _yOffset2;
float _zOffset2;
float _Seed2;
float _Multiplier2;
int _Octaves2;
float _Lacunarity2;
float _Persistence2;
int _RidgedNoise2;
float _HeightExponent2;
float _LayerStrength2;
float _DomainWarping2;

float _ErosionNoiseMerge;

#include "Assets/Shaders/Simplex.cginc"

float erodeHeight(int mapIndex, float height)
{
    float erodedHeight = flowErosionMap[mapIndex];
    if (erodedHeight <= 0)
        return height;

    float mergedHeight = height - erodedHeight * erosionNoiseMerge;

    if (mergedHeight <= 0)
        return 0;

    return mergedHeight;
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= (uint)_MapWidth * 4 || id.y >= (uint)_MapWidth * 2)
        return;

    int mapIndex = id.x + (id.y * _MapWidth * 4);
    float2 uv = float2((float)id.x / (4.0 * (float)_MapWidth), (float)id.y / (2 * (float)_MapWidth));

	float3 offset = float3(_xOffset, _yOffset, _zOffset);
	float3 offset2 = float3(_xOffset2, _yOffset2, _zOffset2);

	float height = sphereHeight(uv, offset, _Seed, _Multiplier, _Octaves, _Lacunarity, _Persistence, _RidgedNoise, _HeightExponent, _LayerStrength, _DomainWarping,
		offset2, _Seed2, _Multiplier2, _Octaves2, _Lacunarity2, _Persistence2, _RidgedNoise2, _HeightExponent2, _LayerStrength2, _DomainWarping2,
		_MinimumHeight, _MaximumHeight);

    heightMap[mapIndex] = height;

    float erodedHeight = erodeHeight(cubemap, height);

    uint textureWidth = uv.x * _MapWidth * 4;
    uint textureHeight = uv.y * _MapWidth * 2;
    uint2 textureCoordinates = uint2(textureWidth, textureHeight);

    result[textureCoordinates] = float4(erodedHeight, erodedHeight, erodedHeight, 1);
}
