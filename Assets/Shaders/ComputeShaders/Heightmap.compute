#pragma kernel CSMain

RWStructuredBuffer<float> heightMap;

int _MapWidth;
int _MapHeight;
float _MinimumHeight;
float _MaximumHeight;

float _Seed;
int _Octaves;
float _Lacunarity;
float _Persistence;
float _Multiplier;
float _xOffset;
float _yOffset;
float _zOffset;
int _RidgedNoise;
float _DomainWarping;
float _HeightExponent;
float _LayerStrength;

float _xOffset2;
float _yOffset2;
float _zOffset2;
float _Seed2;
float _Multiplier2;
int _Octaves2;
float _Lacunarity2;
float _Persistence2;
int _RidgedNoise2;
float _HeightExponent2;
float _LayerStrength2;
float _DomainWarping2;

//#include "Assets/Shaders/Simplex.cginc"
#include "Assets/Shaders/Perlin.cginc"

[numthreads(16, 16, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= (uint)_MapWidth || id.y >= (uint)_MapHeight)
		return;

	float2 uv = float2((id.x) / (float)_MapWidth,
					   (id.y) / (float)_MapHeight);
	//float2 uv = float2((id.x + 0.5) * (float)mapWidth - 1.0,
	//                   (id.y + 0.5) * (float)mapHeight - 1.0);
	int mapIndex = id.x + (id.y * _MapWidth);
	float3 offset = float3(_xOffset, _yOffset, _zOffset);
	float3 offset2 = float3(_xOffset2, _yOffset2, _zOffset2);

	//float height = sphereNoise(uv, offset, seed, multiplier, octaves, lacunarity, persistence, heightRange, ridgedNoise);
	float height = sphereHeight(uv, offset, _Seed, _Multiplier, _Octaves, _Lacunarity, _Persistence, _RidgedNoise, _HeightExponent, _LayerStrength, _DomainWarping,
		                            offset2, _Seed2, _Multiplier2, _Octaves2, _Lacunarity2, _Persistence2, _RidgedNoise2, _HeightExponent2, _LayerStrength2, _DomainWarping2,									_MinimumHeight, _MaximumHeight);

	heightMap[mapIndex] = height;
}
