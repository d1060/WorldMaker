// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel FinalTexture

uint mapWidth;
float lowerLimit;
float higherLimit;
float3 riverColor;
float maxValue;
float riverExponent;

StructuredBuffer<uint> inciseFlowMap;
RWTexture2D<float4> result;

#define INV_SQR_2 0.7071067

[numthreads(32,32,1)]
void FinalTexture (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= mapWidth * 4 || id.y >= mapWidth * 2)
        return;

    uint index = id.x + id.y * mapWidth * 4;
    float flow = inciseFlowMap[index] / maxValue;

    flow = pow(abs(flow), riverExponent);

    float alpha = 1;
    if (flow < lowerLimit)
        alpha = 0;
    else if (flow < higherLimit)
        alpha = (flow - lowerLimit) / (higherLimit - lowerLimit);

    if (alpha <= 0)
        return;

    float4 color = float4(riverColor.r, riverColor.g, riverColor.b, alpha);

    result[id.xy] = color;
}
